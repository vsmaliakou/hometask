{"version":3,"sources":["p2-homeworks/h5/Header.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","className","s","routes","menu","to","activeClassName","active","btn","Message","props","message","img","src","avatar","content","name","time","messageData","HW1","Affair","affair","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","t","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","errorFalse","value","onChange","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","alert","HW3","setUsers","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperButton","red","finalClassName","button_red","button_default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","eRror","showAlert","trim","setChecked","column","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","spanStyle","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","PreJunior","Error404","PATH","Routes","path","exact","render","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.cd783f6e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"routes\":\"Header_routes__2mA6L\",\"menu\":\"Header_menu__180sY\",\"active\":\"Header_active__1kEw-\",\"btn\":\"Header_btn__1ChT7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__W7JHM\",\"img\":\"Message_img__2CpMb\",\"content\":\"Message_content__3gyvQ\",\"name\":\"Message_name__2faE3\",\"time\":\"Message_time__dksVd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2Zjzh\",\"errorInput\":\"SuperInputText_errorInput__1eBie\",\"error\":\"SuperInputText_error__1PSTu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button_default\":\"SuperButton_button_default__1-0wh\",\"button_red\":\"SuperButton_button_red__1Ax87\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1WOns\",\"spanClassName\":\"SuperCheckbox_spanClassName__12ILI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__29LnM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__1oBlg\",\"error\":\"Greeting_error__60iQQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3_D3w\",\"column\":\"HW4_column__1k5_x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spanStyle\":\"SuperEditableSpan_spanStyle__22Xpg\"};","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport s from './Header.module.css'\n\nfunction Header() {\n    return (\n        <div className={s.routes}>\n            <div className={s.menu}>\n                <NavLink to=\"/pre-junior\" activeClassName={s.active}>PreJunior</NavLink>\n                <NavLink to=\"/junior\" activeClassName={s.active}>Junior</NavLink>\n            </div>\n            <div className={s.btn}>Menu</div>\n        </div>\n    );\n}\n\nexport default Header;\n","import React from \"react\";\nimport {messageData} from \"./HW1\";\nimport s from './Message.module.css'\n\ntype messageProps = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props: messageProps) {\n    return (\n        <div className={s.message}>\n            <img className={s.img} src={props.avatar}/>\n            <div className={s.content}>\n                <div className={s.name}>{props.name}</div>\n                <div>{props.message}</div>\n                <div className={s.time}>{props.time}</div>\n            </div>\n        </div>\n    );\n}\n\nexport default Message;\n","import React from \"react\";\nimport Message from \"./Message\";\n\nexport const messageData = {\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\n    name: \"Artem\",\n    message: \"npm start нажал?\",\n    time: \"20:00\",\n};\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            should work (должно работать)\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW1;\n","import React from \"react\";\nimport {AffairType} from \"./HW2\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any +\n    deleteAffairCallback: (_id: number) => void // need to fix any +\n}\n\nfunction Affair(props: AffairPropsType) {\n\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)};// need to fix +\n\n    return (\n        <div>\n            {props.affair.name}\n\n            <button onClick={deleteCallback}>X</button>\n        </div>\n    );\n}\n\nexport default Affair;\n","import React from \"react\";\nimport Affair from \"./Affair\";\nimport {AffairType, FilterType} from \"./HW2\";\n\ntype AffairsPropsType = { // need to fix any +\n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter(\"all\")}; // need to fix +\n    const setHigh = () => {props.setFilter(\"high\")};\n    const setMiddle = () => {props.setFilter(\"middle\")};\n    const setLow = () => {props.setFilter(\"low\")};\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    );\n}\n\nexport default Affairs;\n","import React, {useState} from \"react\";\nimport Affairs from \"./Affairs\";\n\n// types\nexport type AffairPriorityType = \"high\" | \"low\" | \"middle\"; // need to fix any +\nexport type AffairType = { //any // need to fix any +\n    _id: number\n    name: string\n    priority: string\n}\n\nexport type FilterType = \"all\" | AffairPriorityType;\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any +\n    {_id: 1, name: \"React\", priority: \"high\"},\n    {_id: 2, name: \"anime\", priority: \"low\"},\n    {_id: 3, name: \"games\", priority: \"low\"},\n    {_id: 4, name: \"work\", priority: \"high\"},\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\n];\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): any => { // need to fix any +\n    if (filter === \"all\") return affairs;\n    if (filter === \"high\") return affairs.filter(t => t.priority === \"high\");\n    if (filter === \"low\") return affairs.filter(t => t.priority === \"low\");\n    if (filter === \"middle\") return affairs.filter(t => t.priority === \"middle\");\n\n    // else return; // need to fix\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any +\n    return affairs.filter(t => t._id !== _id); // need to fix +\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs); // need to fix any +\n    const [filter, setFilter] = useState<FilterType>(\"all\");\n\n    const filteredAffairs = filterAffairs(affairs, filter);\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)); // need to fix any +\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW2;\n","import React, {ChangeEvent} from \"react\";\nimport s from \"./Greeting.module.css\";\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: boolean // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = s.errorFalse; // need to fix with (?:)\n\n    return (\n        <div>\n            <input value={name} onChange={setNameCallback} className={inputClass}/>\n            <span>{error}</span>\n            <button onClick={addUser}>add</button>\n            <span>{totalUsers}</span>\n        </div>\n    );\n}\n\nexport default Greeting;\n","import React, {ChangeEvent, useState} from \"react\";\nimport Greeting from \"./Greeting\";\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any +\n    addUserCallback: (name: string) => void // need to fix any +\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>(\"\"); // need to fix any +\n    const [error, setError] = useState<boolean>(false); // need to fix any +\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => setName(e.currentTarget.value)  //{ // need to fix any +\n    // need to fix\n    const addUser = () => {\n        if(name === ''){\n            setError(true)\n        } else {\n            setError(false)\n            alert(`Hello ${name}!`) // need to fix +\n            addUserCallback(name)\n            setName(\"\");\n        }\n    };\n\n    const totalUsers = users.length; // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    );\n}\n\nexport default GreetingContainer;\n","import React, {useState} from \"react\";\nimport GreetingContainer from \"./GreetingContainer\";\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any +\n    name: string // need to fix any +\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]); // need to fix any +\n\n    const addUserCallback = (name: string) => { // need to fix any +\n        setUsers([{\n            _id: v1(),\n            name: name\n        }, ...users\n        ]); // need to fix +\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW3;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent, useState} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string | null\n    setError: (value: string | null) => void\n    spanClassName?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error, setError,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n        // setError(\"\")\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = `${error ? s.errorInput : s.superInput}`; // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error ? <span className={finalSpanClassName}>{error}</span> : <span className={finalSpanClassName}></span>}\n        </>\n    );\n}\n\nexport default SuperInputText;","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n    error?: string|null\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        error, red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${error ? s.button_red : s.button_default}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React, {ChangeEvent, useState} from \"react\";\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\nimport s from \"./HW4.module.css\";\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\n\nfunction HW4() {\n    const [text, setText] = useState<string>(\"\");\n    let [error, setError] = useState<string|null>(null)\n    let red: boolean\n    text ? red = false : red = true\n    const eRror = text ? \"\" : \"ERROR\";\n    const showAlert = () => {\n        if (text.trim()) {\n            alert(text.trim());\n            setText(\"\")\n        } else {\n            setError(eRror)\n            alert(\"введите текст...\");// если нет ошибки показать текст\n            setText(\"\")\n        }\n        setText(\"\")\n    }\n\n    const [checked, setChecked] = useState<boolean>(false);\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) =>setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                {/*should work (должно работать)*/}\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    setError={setError}\n                    // className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*should work (должно работать)*/}\n                <SuperButton\n                    error={error}\n                    red={red} // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    {error ? \"DELETE\" : \"OK\"} {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                {/*should work (должно работать)*/}\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}>\n                    some more text\n                </SuperCheckbox>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW4;","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\r\nimport s from './SuperEditableSpan.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false) // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true) // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const spanClassName = `${s.spanStyle} ${className}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    //@ts-ignore\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        ✐{children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state)\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    let state = defaultState\r\n    const stateAsString = localStorage.getItem(key)\r\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\r\n    return state\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// пример использования:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке 'test'\r\nsaveState<StateType>('test', {x: 'A', y: 1})\r\n\r\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\r\n","import React, {useState} from 'react'\r\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {restoreState, saveState} from './localStorage/localStorage'\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const save = () => {\r\n        saveState<string>('editable-span-value', value)\r\n    }\r\n    const restore = () => {\r\n        setValue(restoreState<string>('editable-span-value', value))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : 'enter text...'}}\r\n                />\r\n            </div>\r\n            <SuperButton onClick={save}>save</SuperButton>\r\n            <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW6\r\n","import React from \"react\";\nimport HW1 from \"../../h1/HW1\";\nimport HW2 from \"../../h2/HW2\";\nimport HW3 from \"../../h3/HW3\";\nimport HW4 from \"../../h4/HW4\";\nimport HW6 from \"../../h6/HW6\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW6/>\n        </div>\n    );\n}\n\nexport default PreJunior;\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from \"react\";\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    );\n}\n\nexport default Error404;\n","import React from \"react\";\nimport {Switch, Redirect, Route} from \"react-router-dom\";\nimport PreJunior from \"./pages/PreJunior\";\nimport Error404 from \"./pages/Error404\";\n\nexport const PATH = {\n    PRE_JUNIOR: \"/pre-junior\",\n    JUNIOR: \"/junior\",\n    ERROR: \"/404\"\n    // add paths\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n                {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\n                {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n                <Route path={PATH.JUNIOR} render={() => \"Sorry, there is nothing here yet\"}/>\n                // add routes\n\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                <Route path={PATH.ERROR} render={() => <Error404/>}/>\n                <Route path={\"*\"} render={() => <Redirect to={PATH.ERROR}/>}/>\n\n            </Switch>\n        </div>\n    );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Routes from \"./Routes\";\nimport {HashRouter} from \"react-router-dom\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n                <Header/>\n                <Routes/>\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default HW5;\n","import React from \"react\";\nimport s from \"./App.module.css\";\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            <HW5/>\n\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./p1-main/m1-ui/u1-app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}